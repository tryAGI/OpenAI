
#nullable enable

namespace tryAGI.OpenAI
{
    /// <summary>
    /// The output of a custom tool call from your code, being sent back to the model.
    /// </summary>
    public sealed partial class CustomToolCallOutput
    {
        /// <summary>
        /// The call ID, used to map this custom tool call output to a custom tool call.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("call_id")]
        [global::System.Text.Json.Serialization.JsonRequired]
        public required string CallId { get; set; }

        /// <summary>
        /// The unique ID of the custom tool call output in the OpenAI platform.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The output from the custom tool call generated by your code.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("output")]
        [global::System.Text.Json.Serialization.JsonRequired]
        public required string Output { get; set; }

        /// <summary>
        /// The type of the custom tool call output. Always `custom_tool_call_output`.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("type")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::tryAGI.OpenAI.JsonConverters.CustomToolCallOutputTypeJsonConverter))]
        public global::tryAGI.OpenAI.CustomToolCallOutputType Type { get; set; }

        /// <summary>
        /// Additional properties that are not explicitly defined in the schema
        /// </summary>
        [global::System.Text.Json.Serialization.JsonExtensionData]
        public global::System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get; set; } = new global::System.Collections.Generic.Dictionary<string, object>();

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomToolCallOutput" /> class.
        /// </summary>
        /// <param name="callId">
        /// The call ID, used to map this custom tool call output to a custom tool call.
        /// </param>
        /// <param name="id">
        /// The unique ID of the custom tool call output in the OpenAI platform.
        /// </param>
        /// <param name="output">
        /// The output from the custom tool call generated by your code.
        /// </param>
        /// <param name="type">
        /// The type of the custom tool call output. Always `custom_tool_call_output`.
        /// </param>
#if NET7_0_OR_GREATER
        [global::System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public CustomToolCallOutput(
            string callId,
            string output,
            string? id,
            global::tryAGI.OpenAI.CustomToolCallOutputType type)
        {
            this.CallId = callId ?? throw new global::System.ArgumentNullException(nameof(callId));
            this.Output = output ?? throw new global::System.ArgumentNullException(nameof(output));
            this.Id = id;
            this.Type = type;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomToolCallOutput" /> class.
        /// </summary>
        public CustomToolCallOutput()
        {
        }
    }
}