
#nullable enable

namespace tryAGI.OpenAI
{
    /// <summary>
    /// A system message in a Realtime conversation can be used to provide additional context or instructions to the model. This is similar but distinct from the instruction prompt provided at the start of a conversation, as system messages can be added at any point in the conversation. For major changes to the conversation's behavior, use instructions, but for smaller updates (e.g. "the user is now asking about a different topic"), use system messages.
    /// </summary>
    public sealed partial class RealtimeConversationItemMessageSystem
    {
        /// <summary>
        /// The content of the message.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("content")]
        [global::System.Text.Json.Serialization.JsonRequired]
        public required global::System.Collections.Generic.IList<global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemContentItem> Content { get; set; }

        /// <summary>
        /// The unique ID of the item. This may be provided by the client or generated by the server.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Identifier for the API object being returned - always `realtime.item`. Optional when creating a new item.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("object")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::tryAGI.OpenAI.JsonConverters.RealtimeConversationItemMessageSystemObjectJsonConverter))]
        public global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemObject? Object { get; set; }

        /// <summary>
        /// The role of the message sender. Always `system`.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("role")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::tryAGI.OpenAI.JsonConverters.RealtimeConversationItemMessageSystemRoleJsonConverter))]
        public global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemRole Role { get; set; }

        /// <summary>
        /// The status of the item. Has no effect on the conversation.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("status")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::tryAGI.OpenAI.JsonConverters.RealtimeConversationItemMessageSystemStatusJsonConverter))]
        public global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemStatus? Status { get; set; }

        /// <summary>
        /// The type of the item. Always `message`.
        /// </summary>
        [global::System.Text.Json.Serialization.JsonPropertyName("type")]
        [global::System.Text.Json.Serialization.JsonConverter(typeof(global::tryAGI.OpenAI.JsonConverters.RealtimeConversationItemMessageSystemTypeJsonConverter))]
        public global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemType Type { get; set; }

        /// <summary>
        /// Additional properties that are not explicitly defined in the schema
        /// </summary>
        [global::System.Text.Json.Serialization.JsonExtensionData]
        public global::System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get; set; } = new global::System.Collections.Generic.Dictionary<string, object>();

        /// <summary>
        /// Initializes a new instance of the <see cref="RealtimeConversationItemMessageSystem" /> class.
        /// </summary>
        /// <param name="content">
        /// The content of the message.
        /// </param>
        /// <param name="id">
        /// The unique ID of the item. This may be provided by the client or generated by the server.
        /// </param>
        /// <param name="object">
        /// Identifier for the API object being returned - always `realtime.item`. Optional when creating a new item.
        /// </param>
        /// <param name="role">
        /// The role of the message sender. Always `system`.
        /// </param>
        /// <param name="status">
        /// The status of the item. Has no effect on the conversation.
        /// </param>
        /// <param name="type">
        /// The type of the item. Always `message`.
        /// </param>
#if NET7_0_OR_GREATER
        [global::System.Diagnostics.CodeAnalysis.SetsRequiredMembers]
#endif
        public RealtimeConversationItemMessageSystem(
            global::System.Collections.Generic.IList<global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemContentItem> content,
            string? id,
            global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemObject? @object,
            global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemRole role,
            global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemStatus? status,
            global::tryAGI.OpenAI.RealtimeConversationItemMessageSystemType type)
        {
            this.Content = content ?? throw new global::System.ArgumentNullException(nameof(content));
            this.Id = id;
            this.Object = @object;
            this.Role = role;
            this.Status = status;
            this.Type = type;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RealtimeConversationItemMessageSystem" /> class.
        /// </summary>
        public RealtimeConversationItemMessageSystem()
        {
        }
    }
}