#nullable enable

namespace tryAGI.OpenAI
{
    public partial interface IImagesClient
    {
        /// <summary>
        /// Create image<br/>
        /// Creates an image given a prompt. [Learn more](https://platform.openai.com/docs/guides/images).
        /// </summary>
        /// <param name="request"></param>
        /// <param name="cancellationToken">The token to cancel the operation with</param>
        /// <exception cref="global::tryAGI.OpenAI.ApiException"></exception>
        global::System.Threading.Tasks.Task<global::tryAGI.OpenAI.ImagesResponse> CreateImageAsync(
            global::tryAGI.OpenAI.CreateImageRequest request,
            global::System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// Create image<br/>
        /// Creates an image given a prompt. [Learn more](https://platform.openai.com/docs/guides/images).
        /// </summary>
        /// <param name="background">
        /// Allows to set transparency for the background of the generated image(s). <br/>
        /// This parameter is only supported for `gpt-image-1`. Must be one of <br/>
        /// `transparent`, `opaque` or `auto` (default value). When `auto` is used, the <br/>
        /// model will automatically determine the best background for the image.<br/>
        /// If `transparent`, the output format needs to support transparency, so it <br/>
        /// should be set to either `png` (default value) or `webp`.<br/>
        /// Default Value: auto<br/>
        /// Example: transparent
        /// </param>
        /// <param name="model">
        /// The model to use for image generation. One of `dall-e-2`, `dall-e-3`, or `gpt-image-1`. Defaults to `dall-e-2` unless a parameter specific to `gpt-image-1` is used.
        /// </param>
        /// <param name="moderation">
        /// Control the content-moderation level for images generated by `gpt-image-1`. Must be either `low` for less restrictive filtering or `auto` (default value).<br/>
        /// Default Value: auto<br/>
        /// Example: low
        /// </param>
        /// <param name="n">
        /// The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.<br/>
        /// Default Value: 1<br/>
        /// Example: 1
        /// </param>
        /// <param name="outputCompression">
        /// The compression level (0-100%) for the generated images. This parameter is only supported for `gpt-image-1` with the `webp` or `jpeg` output formats, and defaults to 100.<br/>
        /// Default Value: 100<br/>
        /// Example: 100
        /// </param>
        /// <param name="outputFormat">
        /// The format in which the generated images are returned. This parameter is only supported for `gpt-image-1`. Must be one of `png`, `jpeg`, or `webp`.<br/>
        /// Default Value: png<br/>
        /// Example: png
        /// </param>
        /// <param name="partialImages">
        /// The number of partial images to generate. This parameter is used for<br/>
        /// streaming responses that return partial images. Value must be between 0 and 3.<br/>
        /// When set to 0, the response will be a single image sent in one streaming event.<br/>
        /// Note that the final image may be sent before the full number of partial images<br/>
        /// are generated if the full image is generated more quickly.<br/>
        /// Default Value: 0<br/>
        /// Example: 1
        /// </param>
        /// <param name="prompt">
        /// A text description of the desired image(s). The maximum length is 32000 characters for `gpt-image-1`, 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.<br/>
        /// Example: A cute baby sea otter
        /// </param>
        /// <param name="quality">
        /// The quality of the image that will be generated. <br/>
        /// - `auto` (default value) will automatically select the best quality for the given model.<br/>
        /// - `high`, `medium` and `low` are supported for `gpt-image-1`.<br/>
        /// - `hd` and `standard` are supported for `dall-e-3`.<br/>
        /// - `standard` is the only option for `dall-e-2`.<br/>
        /// Default Value: auto<br/>
        /// Example: medium
        /// </param>
        /// <param name="responseFormat">
        /// The format in which generated images with `dall-e-2` and `dall-e-3` are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated. This parameter isn't supported for `gpt-image-1` which will always return base64-encoded images.<br/>
        /// Default Value: url<br/>
        /// Example: url
        /// </param>
        /// <param name="size">
        /// The size of the generated images. Must be one of `1024x1024`, `1536x1024` (landscape), `1024x1536` (portrait), or `auto` (default value) for `gpt-image-1`, one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`, and one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3`.<br/>
        /// Default Value: auto<br/>
        /// Example: 1024x1024
        /// </param>
        /// <param name="stream">
        /// Generate the image in streaming mode. Defaults to `false`. See the <br/>
        /// [Image generation guide](https://platform.openai.com/docs/guides/image-generation) for more information.<br/>
        /// This parameter is only supported for `gpt-image-1`.<br/>
        /// Default Value: false<br/>
        /// Example: false
        /// </param>
        /// <param name="style">
        /// The style of the generated images. This parameter is only supported for `dall-e-3`. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images.<br/>
        /// Default Value: vivid<br/>
        /// Example: vivid
        /// </param>
        /// <param name="user">
        /// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).<br/>
        /// Example: user-1234
        /// </param>
        /// <param name="cancellationToken">The token to cancel the operation with</param>
        /// <exception cref="global::System.InvalidOperationException"></exception>
        global::System.Threading.Tasks.Task<global::tryAGI.OpenAI.ImagesResponse> CreateImageAsync(
            string prompt,
            global::tryAGI.OpenAI.CreateImageRequestBackground? background = default,
            global::tryAGI.OpenAI.AnyOf<string, global::tryAGI.OpenAI.CreateImageRequestModel?>? model = default,
            global::tryAGI.OpenAI.CreateImageRequestModeration? moderation = default,
            int? n = default,
            int? outputCompression = default,
            global::tryAGI.OpenAI.CreateImageRequestOutputFormat? outputFormat = default,
            int? partialImages = default,
            global::tryAGI.OpenAI.CreateImageRequestQuality? quality = default,
            global::tryAGI.OpenAI.CreateImageRequestResponseFormat? responseFormat = default,
            global::tryAGI.OpenAI.CreateImageRequestSize? size = default,
            bool? stream = default,
            global::tryAGI.OpenAI.CreateImageRequestStyle? style = default,
            string? user = default,
            global::System.Threading.CancellationToken cancellationToken = default);
    }
}