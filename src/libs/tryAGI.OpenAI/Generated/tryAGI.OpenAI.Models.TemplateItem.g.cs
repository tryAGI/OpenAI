#pragma warning disable CS0618 // Type or member is obsolete

#nullable enable

namespace tryAGI.OpenAI
{
    /// <summary>
    /// 
    /// </summary>
    public readonly partial struct TemplateItem : global::System.IEquatable<TemplateItem>
    {
        /// <summary>
        /// A message input to the model with a role indicating instruction following<br/>
        /// hierarchy. Instructions given with the `developer` or `system` role take<br/>
        /// precedence over instructions given with the `user` role. Messages with the<br/>
        /// `assistant` role are presumed to have been generated by the model in previous<br/>
        /// interactions.
        /// </summary>
#if NET6_0_OR_GREATER
        public global::tryAGI.OpenAI.EasyInputMessage? EasyInputMessage { get; init; }
#else
        public global::tryAGI.OpenAI.EasyInputMessage? EasyInputMessage { get; }
#endif

        /// <summary>
        /// 
        /// </summary>
#if NET6_0_OR_GREATER
        [global::System.Diagnostics.CodeAnalysis.MemberNotNullWhen(true, nameof(EasyInputMessage))]
#endif
        public bool IsEasyInputMessage => EasyInputMessage != null;

        /// <summary>
        /// 
        /// </summary>
        public static implicit operator TemplateItem(global::tryAGI.OpenAI.EasyInputMessage value) => new TemplateItem((global::tryAGI.OpenAI.EasyInputMessage?)value);

        /// <summary>
        /// 
        /// </summary>
        public static implicit operator global::tryAGI.OpenAI.EasyInputMessage?(TemplateItem @this) => @this.EasyInputMessage;

        /// <summary>
        /// 
        /// </summary>
        public TemplateItem(global::tryAGI.OpenAI.EasyInputMessage? value)
        {
            EasyInputMessage = value;
        }

        /// <summary>
        /// A message input to the model with a role indicating instruction following<br/>
        /// hierarchy. Instructions given with the `developer` or `system` role take<br/>
        /// precedence over instructions given with the `user` role. Messages with the<br/>
        /// `assistant` role are presumed to have been generated by the model in previous<br/>
        /// interactions.
        /// </summary>
#if NET6_0_OR_GREATER
        public global::tryAGI.OpenAI.EvalItem? Eval { get; init; }
#else
        public global::tryAGI.OpenAI.EvalItem? Eval { get; }
#endif

        /// <summary>
        /// 
        /// </summary>
#if NET6_0_OR_GREATER
        [global::System.Diagnostics.CodeAnalysis.MemberNotNullWhen(true, nameof(Eval))]
#endif
        public bool IsEval => Eval != null;

        /// <summary>
        /// 
        /// </summary>
        public static implicit operator TemplateItem(global::tryAGI.OpenAI.EvalItem value) => new TemplateItem((global::tryAGI.OpenAI.EvalItem?)value);

        /// <summary>
        /// 
        /// </summary>
        public static implicit operator global::tryAGI.OpenAI.EvalItem?(TemplateItem @this) => @this.Eval;

        /// <summary>
        /// 
        /// </summary>
        public TemplateItem(global::tryAGI.OpenAI.EvalItem? value)
        {
            Eval = value;
        }

        /// <summary>
        /// 
        /// </summary>
        public TemplateItem(
            global::tryAGI.OpenAI.EasyInputMessage? easyInputMessage,
            global::tryAGI.OpenAI.EvalItem? eval
            )
        {
            EasyInputMessage = easyInputMessage;
            Eval = eval;
        }

        /// <summary>
        /// 
        /// </summary>
        public object? Object =>
            Eval as object ??
            EasyInputMessage as object 
            ;

        /// <summary>
        /// 
        /// </summary>
        public override string? ToString() =>
            EasyInputMessage?.ToString() ??
            Eval?.ToString() 
            ;

        /// <summary>
        /// 
        /// </summary>
        public bool Validate()
        {
            return IsEasyInputMessage || IsEval;
        }

        /// <summary>
        /// 
        /// </summary>
        public TResult? Match<TResult>(
            global::System.Func<global::tryAGI.OpenAI.EasyInputMessage?, TResult>? easyInputMessage = null,
            global::System.Func<global::tryAGI.OpenAI.EvalItem?, TResult>? eval = null,
            bool validate = true)
        {
            if (validate)
            {
                Validate();
            }

            if (IsEasyInputMessage && easyInputMessage != null)
            {
                return easyInputMessage(EasyInputMessage!);
            }
            else if (IsEval && eval != null)
            {
                return eval(Eval!);
            }

            return default(TResult);
        }

        /// <summary>
        /// 
        /// </summary>
        public void Match(
            global::System.Action<global::tryAGI.OpenAI.EasyInputMessage?>? easyInputMessage = null,
            global::System.Action<global::tryAGI.OpenAI.EvalItem?>? eval = null,
            bool validate = true)
        {
            if (validate)
            {
                Validate();
            }

            if (IsEasyInputMessage)
            {
                easyInputMessage?.Invoke(EasyInputMessage!);
            }
            else if (IsEval)
            {
                eval?.Invoke(Eval!);
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public override int GetHashCode()
        {
            var fields = new object?[]
            {
                EasyInputMessage,
                typeof(global::tryAGI.OpenAI.EasyInputMessage),
                Eval,
                typeof(global::tryAGI.OpenAI.EvalItem),
            };
            const int offset = unchecked((int)2166136261);
            const int prime = 16777619;
            static int HashCodeAggregator(int hashCode, object? value) => value == null
                ? (hashCode ^ 0) * prime
                : (hashCode ^ value.GetHashCode()) * prime;

            return global::System.Linq.Enumerable.Aggregate(fields, offset, HashCodeAggregator);
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(TemplateItem other)
        {
            return
                global::System.Collections.Generic.EqualityComparer<global::tryAGI.OpenAI.EasyInputMessage?>.Default.Equals(EasyInputMessage, other.EasyInputMessage) &&
                global::System.Collections.Generic.EqualityComparer<global::tryAGI.OpenAI.EvalItem?>.Default.Equals(Eval, other.Eval) 
                ;
        }

        /// <summary>
        /// 
        /// </summary>
        public static bool operator ==(TemplateItem obj1, TemplateItem obj2)
        {
            return global::System.Collections.Generic.EqualityComparer<TemplateItem>.Default.Equals(obj1, obj2);
        }

        /// <summary>
        /// 
        /// </summary>
        public static bool operator !=(TemplateItem obj1, TemplateItem obj2)
        {
            return !(obj1 == obj2);
        }

        /// <summary>
        /// 
        /// </summary>
        public override bool Equals(object? obj)
        {
            return obj is TemplateItem o && Equals(o);
        }
    }
}
